[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "training-at-scale"
version = "0.1.0"
description = "A project for training models at scale using JAX"
authors = [
    {name = "Juan Francisco Lebrero", email = "lebrerojuanfrancisco@gmail.com"},
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {text = "MIT"}
dependencies = [
    "jax>=0.4.24",
    "jaxlib>=0.4.24",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.62.0",
    "wandb>=0.15.0",
    "tensorboard>=2.8.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.4.0",
    "jupyterlab>=3.0.0",
]

[project.optional-dependencies]
gpu = [
    "jax[cuda12_pip]",
    "cupy-cuda12x>=12.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=1.0.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.4.0",
    "jupyterlab>=3.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]

[project.urls]
Homepage = "https://github.com/frizyz/training-at-scale"
Repository = "https://github.com/frizyz/training-at-scale"
"Bug Tracker" = "https://github.com/frizyz/training-at-scale/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["training_at_scale*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["training_at_scale"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
